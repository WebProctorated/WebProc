{"version":3,"sources":["logo.svg","assets/download.jpg","components/Login.js","components/Instruction.js","components/Calibration.js","components/Test.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","console","log","state","enrollment","testId","history","HistoryProvider","onChange","bind","verifyStudent","e","this","setState","target","name","value","fetch","method","headers","body","JSON","stringify","then","res","status","alert","show","setInstructions","catch","err","style","backgroundImage","bgImage","height","className","display","opacity","backgroundColor","padding","margin","fontFamily","textAlign","htmlFor","id","placeholder","type","onClick","Component","withAlert","Instruction","accepted","handleSubmit","setCalibration","div","class","width","borderRadius","color","marginTop","fontSize","paddingTop","paddingLeft","marginLeft","for","Calibration","stream","undefined","socket","isPlaying","key","handleClick","sendSnapshot","emit","on","data","document","getElementById","setAttribute","window","src","setInterval","json","timerProps","size","strokeWidth","position","top","right","colors","duration","initialRemainingTime","onComplete","totalElapsedTime","elapsedTime","dimension","time","renderTime","autoPlay","justifyContent","setTest","Test","startTest","addEventListener","title","visibilityState","CHEAT","action","marginBottom","App","msg","login","instructions","calibration","test","setMessage","val","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","options","positions","TOP_CENTER","timeout","offset","transition","transitions","SCALE","ReactDOM","render","StrictMode","template","AlertTemplate"],"mappings":"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","file":"js/main.5b769645.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"media/download.6a0ea222.jpg\";","import React, { Component } from 'react';\r\nimport bgImage from '../assets/download.jpg';\r\nimport useHistory from 'react';\r\nimport { withAlert } from 'react-alert'\r\n\r\n// const HistoryProvider = props =>{\r\n//     const callHistory = () => {\r\n//         let history = useHistory();\r\n//         history.push('/instructions')\r\n//         return  \r\n//     }\r\n//     return (<><div></div>{callHistory()}</>)\r\n// }\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log(props)\r\n        this.state={\r\n            enrollment:'',\r\n            testId:'',\r\n            history:props.history,\r\n            HistoryProvider:false\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.verifyStudent =this.verifyStudent.bind(this);\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    verifyStudent(){\r\n        if(this.state.testId !== null && this.state.testId !== '' && this.state.enrollment !== null && this.state.enrollment !== ''){\r\n            console.log(this.props)\r\n            fetch('http://127.0.0.1:5000/login',{\r\n                method:'POST',\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\"\r\n                },\r\n                body:JSON.stringify({\r\n                    enrollment:this.state.enrollment,\r\n                    testId:this.state.testId\r\n                })\r\n            }).then(res=>{\r\n                if(res.status === 201){\r\n                    this.props.alert.show('Successfully Logged in !!');\r\n                    console.log(this.props)\r\n                    // this.setState({HistoryProvider:true})\r\n                    this.props.setInstructions(true);\r\n                    // this.props.history.push('/instructions')\r\n                }\r\n                else if(res.status === 400){\r\n                    this.props.alert('Server Error, Login Again!!');\r\n                }\r\n                else if(res.status === 401){\r\n                    this.props.alert('Invalid Login Credentials!!');\r\n                }\r\n                console.log(res);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{backgroundImage:`url(${bgImage})`, height:'100%'}}>\r\n                {/* {this.state.HistoryProvider?this.props.histpry.push('/instructions'):''} */}\r\n                <div className=\"container col-md-4 mx-auto\" style={{height:'100%',display:'flex' }}>\r\n                <div className=\"jumbotron\" style={{ opacity: '0.95', backgroundColor:'#e3e5e6', padding:'0', margin:'auto'}}>\r\n                    <div className=\"jumbotron-content\" style={{padding:'2rem'}}>\r\n                        <h1 style={{ fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif', textAlign: 'center' }}>\r\n                            Login here</h1>\r\n                        {/* <form> */}\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-12 mx-auto\">\r\n                                    <label htmlFor=\"inputEmail4\">Enrollment Number</label>\r\n                                    <input onChange={this.onChange} className=\"form-control\" id=\"inputEmail4\" placeholder=\"Enrollment No.\" name=\"enrollment\" value={this.state.enrollment}/>\r\n                                </div>\r\n                                <div className=\"form-group col-md-12 mx-auto\">\r\n                                    <label htmlFor=\"inputPassword4\">Test Id</label>\r\n                                    <input onChange={this.onChange} type=\"password\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Test Id\" name=\"testId\" value={this.state.testId}/>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ textAlign: 'center' }}>\r\n                                <button onClick={()=>this.verifyStudent()} className=\"btn btn-primary\" id=\"loginbutton\">Sign in</button>\r\n                            </div>\r\n                        {/* </form> */}\r\n                    </div>\r\n                </div>\r\n             </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withAlert()(Login);","import React, { Component } from 'react'\r\n\r\nexport default class Instruction extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            accepted:false\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(){\r\n        if(this.state.accepted === true){\r\n            this.props.setCalibration(true);\r\n        }\r\n        else{\r\n            alert('accept the instructions');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div div class=\"mx-auto\" style={{width:'60%',height:'60%'}}>\r\n                    <div style={{padding: '3vh', borderRadius: '5px',backgroundColor: '#727985',color: 'white',margin:'auto',textAlign:'center', marginTop:'6vh'}}><h1> Insturctions for Test paper</h1></div>\r\n                    <ol class=\"list-group\" type='1' style={{fontSize:'1.2rem',paddingTop:'2%',paddingLeft:'4vh'}}>\r\n                        <li>Student must be in the frame throughout the test. <br/>If he/she moves out, it will generate warning.</li>\r\n                        <li>Test duration: 15 mins</li>\r\n                        <li>Student should not switch tabs during examination.</li>\r\n                        <li>Camera will be on during the test, if 3 warning are called, test will be terminated.</li>\r\n                        <li>Every correct answer will award you 1 mark.</li>\r\n                        <li>And incorrect will deduct .25 mark.</li>\r\n                        <li>Test will have __ number of questions.</li>\r\n                        <li>__ Maximum marks</li>\r\n                        <li>During test proper internet collectivity must be maintained.</li>\r\n                        <li>It will be MCQ test</li>\r\n                    </ol>\r\n                    <div style={{marginLeft: '2vh', marginTop: '3vh'}}>\r\n                        <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" onChange={()=>this.setState({accepted:true})} value={this.state.accepted}/>\r\n                        <label class=\"form-check-label\" for=\"exampleCheck1\">Read the Instructions</label>\r\n                    </div>\r\n                    <button class=\"btn btn-primary\" style={{margin: 'auto',padding: '0vh 5vh', display: 'block',fontSize: '1.4rem'}} onClick={()=>this.handleSubmit()}>Proceed</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withAlert } from 'react-alert';\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\n\r\nclass Calibration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stream: undefined,\r\n            socket: null,\r\n            isPlaying: false,\r\n            key: 0\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.sendSnapshot = this.sendSnapshot.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.setState({ socket: window.io.connect(window.location.protocol + '//' + document.domain + ':' + '5000' + \"/test\") });\r\n    }\r\n\r\n    sendSnapshot() {\r\n        // let video = document.querySelector(\"#videoElement\");\r\n        // let canvas = document.querySelector(\"#canvasElement\");\r\n        // let ctx = canvas.getContext('2d');\r\n\r\n        // ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight, 0, 0, 300, 150);\r\n\r\n        // let dataURL = canvas.toDataURL('image/jpeg');\r\n        if (this.state.socket !== null) {\r\n            this.state.socket.emit('calibrate', {});\r\n\r\n            // this.state.socket.emit('output image')\r\n            // fetch('http://localhost:5000/calibration', {\r\n            //     method: 'GET',\r\n            //     headers: { 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,/;q=0.8' }\r\n            // }).then(data => {\r\n            //     console.log(data)\r\n            //     var photo = document.getElementById('photo')\r\n            //     photo.setAttribute('src', data.body)\r\n            //     // return data.body.text()\r\n            // })\r\n            //     .then(res => console.log(res))\r\n            this.state.socket.on('out-image-event', (data) => {\r\n                this.setState({ isPlaying: true })\r\n                this.setState({ key: this.state.key + 1 })\r\n                // console.log(data)\r\n            });\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n       document.getElementById('photo').setAttribute('src',window.src);\r\n       setInterval(()=>{\r\n            fetch('http://localhost:5000/msg')\r\n            .then(res=>{\r\n                console.log(res);\r\n                return res.json();\r\n            }).then(data=>console.log(data));\r\n        },100\r\n        )\r\n        // if (this.state.socket === null) {\r\n        //     this.state.socket = window.io.connect(window.location.protocol + '//' + document.domain + ':' + '5000' + \"/test\", {\r\n        //         reconnection: true,\r\n        //         reconnectionDelay: 1000,\r\n        //         reconnectionDelayMax: 5000,\r\n        //         reconnectionAttempts: Infinity\r\n        //     })\r\n        // }\r\n\r\n        // console.log(this.state.socket)\r\n        // let video = document.querySelector(\"#videoElement\");\r\n        // var localMediaStream = null;\r\n        // var constraints = {\r\n        //     video: {\r\n        //         width: { max: 640 },\r\n        //         height: { max: 480 }\r\n        //     }\r\n        // };\r\n        // var self = this;\r\n        // let sendSnapshot = this.sendSnapshot\r\n        // let id = setInterval(() => {\r\n        //     if (this.state.socket === null)\r\n        //         clearInterval(id);\r\n        //     self.sendSnapshot();\r\n        // }, 1000 / 5);\r\n        // navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\r\n        //     // video.srcObject = stream;\r\n        //     // localMediaStream = stream;\r\n\r\n        // }).catch((error) => {\r\n        //     console.log(error);\r\n        // });\r\n\r\n        // this.state.socket.on('msg', (data) => {\r\n        //     console.log(data);\r\n        //     if (data.error === true) {\r\n        //         // setMessage('error: '+data.msg,this.props.alert);\r\n        //         this.props.alert.removeAll();\r\n        //         this.props.alert.show('error: ' + data.msg)\r\n        //     }\r\n        //     else {\r\n        //         // setMessage(data.msg,this.props.alert);\r\n        //         this.props.alert.removeAll();\r\n        //         this.props.alert.show(data.msg)\r\n        //     }\r\n        // })\r\n        // this.state.socket.on('connect', () => console.log('connected'))\r\n        // this.state.socket.on('disconnect', () => {\r\n        //     console.log('disconnected')\r\n        //     if (this.state.socket !== null) {\r\n        //         this.state.socket.destroy();\r\n        //         delete this.state.socket;\r\n        //         this.setState({ socket: null })\r\n        //     }\r\n        // });\r\n\r\n    }\r\n    render() {\r\n        const minuteSeconds = 60;\r\n        const timerProps = {\r\n            isPlaying: this.state.isPlaying,\r\n            size: 120,\r\n            strokeWidth: 6\r\n        };\r\n        const renderTime = (dimension, time) => {\r\n            return (\r\n                <div className=\"time-wrapper\">\r\n                    <div className=\"time\" style={{ textAlign: 'center' }}>{time}</div>\r\n                    <div>{dimension}</div>\r\n                </div>\r\n            );\r\n        };\r\n        const getTimeSeconds = (time) => (10 - time) | 0;\r\n        return (\r\n            <div>\r\n                <div style={{ width: 'fit-content', position: 'absolute', top: '16vh', right: '3vw' }}>\r\n                    <CountdownCircleTimer\r\n                        {...timerProps}\r\n                        key={this.state.key}\r\n                        colors={[[\"#218380\"]]}\r\n                        duration={10}\r\n                        initialRemainingTime={this.state.isPlaying === false ? 10 : 10}\r\n                        onComplete={(totalElapsedTime) => { console.log('time up'); this.setState({ isPlaying: false }) }}\r\n                    >\r\n                        {({ elapsedTime }) =>\r\n                            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n                        }\r\n                    </CountdownCircleTimer>\r\n                </div>\r\n                <div><video autoPlay={true} id=\"videoElement\"\r\n                    style={{ display: 'none' }}\r\n                ></video>\r\n                    <img id=\"photo\" style={{ borderRadius: '5px', height: '70vh', width: '70vw', margin: '5vh 15vw' }} /></div>\r\n                <div style={{ margin: 'auto', width: '25vw', display: 'flex', justifyContent: 'space-between' }}>\r\n                    <button type=\"button\" className=\"btn btn-info\" onClick={() => this.handleClick()}>Start for Calibration</button>\r\n                    <button type=\"button\" className=\"btn btn-success\" onClick={() => { this.props.setTest(true) }}>Take Test</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withAlert()(Calibration);","import React, { Component } from 'react';\r\nimport { withAlert } from 'react-alert';\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\n\r\nclass Test extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            stream:undefined,\r\n            socket:null\r\n        }\r\n        this.startTest = this.startTest.bind(this);\r\n        this.sendSnapshot = this.sendSnapshot.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        //js to restrict user to open only one tab.\r\n        document.addEventListener('visibilitychange', ()=>{\r\n          document.title = document.visibilityState;\r\n          if(document.visibilityState == \"hidden\"){\r\n            //show alert message\r\n            window.alert(\"don't switch the tab, it will treated as cheating behaviour\\n \");\r\n            window.CHEAT = true;\r\n            console.log(document.visibilityState);}\r\n          });\r\n          window.addEventListener('resize',(e)=>{\r\n            window.alert(\"don't minimize the window, it will treated as cheating behaviour\\n \");\r\n            window.CHEAT = true;\r\n            console.log('resize: ',e)\r\n          })\r\n          this.startTest()\r\n      }\r\n\r\n    sendSnapshot(){\r\n        // let video = document.querySelector(\"#videoElement\");\r\n        // let canvas = document.querySelector(\"#canvasElement\");\r\n        // let ctx = canvas.getContext('2d');\r\n\r\n        // ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight, 0, 0, 300, 150);\r\n\r\n        // let dataURL = canvas.toDataURL('image/jpeg');\r\n        // if(this.state.socket !== null){\r\n        //     this.state.socket.emit('proctor',{} );\r\n        //     this.state.socket.on('out-image-event', (data)=> {\r\n        //         console.log(data)\r\n        //     });\r\n        // }\r\n        if(window.CHEAT === true){\r\n            fetch('http://localhost:5000/cheat',{\r\n                method:'POST',\r\n                headers:{\r\n                    'Content-Type': 'application/json',\r\n                    'Accept':'application/json'\r\n                },\r\n                body:JSON.stringify({CHEAT:true})\r\n            })\r\n            window.CHEAT = false;\r\n        }\r\n    }\r\n\r\n    startTest(){\r\n        document.getElementById('test_window').setAttribute('src',window.src);\r\n        setInterval(()=>{\r\n            fetch('http://localhost:5000/msg')\r\n            .then(res=>{\r\n                console.log(res);\r\n                return res.json();\r\n            }).then(data=>console.log(data));\r\n        },100\r\n        )\r\n        // if(this.state.socket === null){\r\n        //     this.state.socket = window.io.connect( window.location.protocol + '//' + document.domain + ':' + '5000' + \"/test\", {\r\n        //     reconnection: true,\r\n        //     reconnectionDelay: 1000,\r\n        //     reconnectionDelayMax : 5000,\r\n        //     reconnectionAttempts: Infinity})\r\n        // }\r\n\r\n        // console.log(this.state.socket)\r\n        // let video = document.querySelector(\"#videoElement\");\r\n        // var localMediaStream = null;\r\n        // var constraints = {\r\n        //     video: {\r\n        //         width: { max: 640 },\r\n        //         height: { max: 480 }\r\n        //     }\r\n        // };\r\n        // navigator.mediaDevices.getUserMedia(constraints).then((stream)=>{\r\n        //     video.srcObject = stream;\r\n        //     localMediaStream = stream;\r\n        //     var self = this;\r\n        //     // let sendSnapshot = this.sendSnapshot\r\n        //     let id = setInterval(()=>{\r\n        //         if(this.state.socket === null)\r\n        //             clearInterval(id);\r\n        //         self.sendSnapshot();\r\n        //     }, 1000/16);\r\n        // }).catch((error)=>{\r\n        //     console.log(error);\r\n        // });\r\n\r\n        // this.state.socket.on('msg',(data)=>{\r\n        //     console.log(data);\r\n        //     if(data.error === true)\r\n        //     {\r\n        //         // setMessage('error: '+data.msg,this.props.alert);\r\n        //         this.props.alert.removeAll();\r\n        //         this.props.alert.show('error: '+data.msg)\r\n        //     }\r\n        //     else\r\n        //     {\r\n        //         // setMessage(data.msg,this.props.alert);\r\n        //         this.props.alert.removeAll();\r\n        //         this.props.alert.show(data.msg)\r\n        //     }\r\n        // })\r\n        // this.state.socket.on('connect',()=>console.log('connected'))\r\n        // this.state.socket.on('disconnect', ()=> {\r\n        //     console.log('disconnected')\r\n        //     this.state.socket.destroy();\r\n        //     delete this.state.socket;\r\n        //     this.state.socket = null;\r\n        //     } );\r\n\r\n    }\r\n    render() {\r\n        const timerProps = {\r\n            isPlaying: true,\r\n            size: 120,\r\n            strokeWidth: 6\r\n          };\r\n          const renderTime = (dimension, time) => {\r\n            return (\r\n              <div className=\"time-wrapper\">\r\n                <div className=\"time\">{time}</div>\r\n                <div>{dimension}</div>\r\n              </div>\r\n            );\r\n          };\r\n          const getTimeSeconds = (time) => (2 + (time % 60) / 60) | 0;\r\n        return (\r\n            <div>\r\n                <div style={{ width: 'fit-content',position: 'absolute',top: '40vh', right: '10vw'}}>\r\n                    <CountdownCircleTimer\r\n                        {...timerProps}\r\n                        colors={[[\"#218380\"]]}\r\n                        duration={2*60}\r\n                        initialRemainingTime={2*60}\r\n                        onComplete={(totalElapsedTime) => console.log('time up')}\r\n                    >\r\n                        {({ elapsedTime }) =>\r\n                        renderTime(\"minutes\", getTimeSeconds(elapsedTime))\r\n                        }\r\n                    </CountdownCircleTimer>\r\n                </div>\r\n                <div><video autoPlay={true} id=\"videoElement\" \r\n                style={{display:'none'}}\r\n                ></video>\r\n                <img id=\"test_window\" style={{backgroundColor: 'grey',borderRadius: '5px',height: '30vh',width: '25vw',marginLeft: '72vw',marginTop: '4vh'}}/></div>\r\n                <div style={{width: 'fit-content',margin: 'auto',marginTop: '-30vh'}}>\r\n                    <h1>7 Wonders of the World</h1>\r\n                    <form action=\"\" id=\"quiz\" method=\"POST\">\r\n                        <ol>\r\n                        \r\n                            <li>Where is <u>Petra</u> located?</li>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Jerash' name='Petra' />Jerash  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Jerash\" name=\"Petra\" id=\"flexRadioDefault1\"/>Jerash\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Zarqa' name='Petra' />Zarqa  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Zarqa\" name=\"Petra\" id=\"flexRadioDefault1\"/>Zarqa\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Ma&#39;an Governorate' name='Petra' />Ma&#39;an Governorate  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Ma'an Governorate\" name=\"Petra\" id=\"flexRadioDefault1\"/>Ma'an Governorate\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Amman' name='Petra' />Amman  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Amman\" name=\"Petra\" id=\"flexRadioDefault1\"/>Amman\r\n                                </div>\r\n                            \r\n                        \r\n                            <li>Where is <u>Colosseum</u> located?</li>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Bologna' name='Colosseum' />Bologna  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Bologna\" name=\"Colosseum\" id=\"flexRadioDefault1\"/>Bologna\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Milan' name='Colosseum' />Milan  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Milan\" name=\"Colosseum\" id=\"flexRadioDefault1\"/>Milan\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Rome' name='Colosseum' />Rome  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Rome\" name=\"Colosseum\" id=\"flexRadioDefault1\"/>Rome\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Bari' name='Colosseum' />Bari  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Bari\" name=\"Colosseum\" id=\"flexRadioDefault1\"/>Bari\r\n                                </div>\r\n                            \r\n                        \r\n                            <li>Where is <u>Great Wall of China</u> located?</li>\r\n                            \r\n                                {/* <!-- <input type='radio' value='China' name='Great Wall of China' />China  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"China\" name=\"Great Wall of China\" id=\"flexRadioDefault1\"/>China\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Beijing' name='Great Wall of China' />Beijing  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Beijing\" name=\"Great Wall of China\" id=\"flexRadioDefault1\"/>Beijing\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Shanghai' name='Great Wall of China' />Shanghai  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Shanghai\" name=\"Great Wall of China\" id=\"flexRadioDefault1\"/>Shanghai\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Tianjin' name='Great Wall of China' />Tianjin  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Tianjin\" name=\"Great Wall of China\" id=\"flexRadioDefault1\"/>Tianjin\r\n                                </div>\r\n                            \r\n                        \r\n                            <li>Where is <u>Taj Mahal</u> located?</li>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Mumbai' name='Taj Mahal' />Mumbai  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Mumbai\" name=\"Taj Mahal\" id=\"flexRadioDefault1\"/>Mumbai\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Agra' name='Taj Mahal' />Agra  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Agra\" name=\"Taj Mahal\" id=\"flexRadioDefault1\"/>Agra\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='New Delhi' name='Taj Mahal' />New Delhi  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"New Delhi\" name=\"Taj Mahal\" id=\"flexRadioDefault1\"/>New Delhi\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Chennai' name='Taj Mahal' />Chennai  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Chennai\" name=\"Taj Mahal\" id=\"flexRadioDefault1\"/>Chennai\r\n                                </div>\r\n                            \r\n                        \r\n                            <li>Where is <u>Egypt Pyramids</u> located?</li>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Suez' name='Egypt Pyramids' />Suez  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Suez\" name=\"Egypt Pyramids\" id=\"flexRadioDefault1\"/>Suez\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Tanta' name='Egypt Pyramids' />Tanta  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Tanta\" name=\"Egypt Pyramids\" id=\"flexRadioDefault1\"/>Tanta\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Luxor' name='Egypt Pyramids' />Luxor  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Luxor\" name=\"Egypt Pyramids\" id=\"flexRadioDefault1\"/>Luxor\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Giza' name='Egypt Pyramids' />Giza  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Giza\" name=\"Egypt Pyramids\" id=\"flexRadioDefault1\"/>Giza\r\n                                </div>\r\n                            \r\n                        \r\n                            <li>Where is <u>Christ the Redeemer</u> located?</li>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Olinda' name='Christ the Redeemer' />Olinda  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Olinda\" name=\"Christ the Redeemer\" id=\"flexRadioDefault1\"/>Olinda\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Natal' name='Christ the Redeemer' />Natal  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Natal\" name=\"Christ the Redeemer\" id=\"flexRadioDefault1\"/>Natal\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Rio de Janeiro' name='Christ the Redeemer' />Rio de Janeiro  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Rio de Janeiro\" name=\"Christ the Redeemer\" id=\"flexRadioDefault1\"/>Rio de Janeiro\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Betim' name='Christ the Redeemer' />Betim  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Betim\" name=\"Christ the Redeemer\" id=\"flexRadioDefault1\"/>Betim\r\n                                </div>\r\n                            \r\n                        \r\n                            <li>Where is <u>Machu Picchu</u> located?</li>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Lima' name='Machu Picchu' />Lima  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Lima\" name=\"Machu Picchu\" id=\"flexRadioDefault1\"/>Lima\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Piura' name='Machu Picchu' />Piura  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Piura\" name=\"Machu Picchu\" id=\"flexRadioDefault1\"/>Piura\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Tacna' name='Machu Picchu' />Tacna  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Tacna\" name=\"Machu Picchu\" id=\"flexRadioDefault1\"/>Tacna\r\n                                </div>\r\n                            \r\n                                {/* <!-- <input type='radio' value='Cuzco Region' name='Machu Picchu' />Cuzco Region  --> */}\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" value=\"Cuzco Region\" name=\"Machu Picchu\" id=\"flexRadioDefault1\"/>Cuzco Region\r\n                                </div>\r\n                            \r\n                        \r\n                        </ol>\r\n                    </form>\r\n                    </div>\r\n                <button type=\"button\" style={{margin: 'auto',display: 'block', marginBottom:'2vh'}} className=\"btn btn-success\" onClick={()=>this.handleClick()}>Submit Test</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withAlert()(Test);","import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Login from './components/Login';\nimport Instruction from './components/Instruction';\nimport Calibration from './components/Calibration';\nimport Test from './components/Test';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      msg:null,\n      login:true,\n      instructions:false,\n      calibration:false,\n      test:false\n    }\n    this.setMessage = this.setMessage.bind(this)\n  }\n  setMessage(msg){\n    this.setState({msg:msg})\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        {this.state.login?\n         <Login setInstructions={(val)=>this.setState({instructions:val,login:false})}/>:this.state.instructions?\n         <Instruction setCalibration={(val)=>this.setState({calibration:val,instructions:false})}/>:this.state.calibration?\n         <Calibration setTest={(val)=>this.setState({test:val,calibration:false})}/>:this.state.test?\n        <Test/>:''\n        }\n        {/* <Message msg={this.state.msg} setMessage={this.setMessage}/>\n        <Login setMessage={this.setMessage}/> */}\n        {/* <Router> */}\n         {/* <Login setMessage={this.setMessage}/>  */}\n          {/* <Switch>\n            <Route exact path=\"/\" component={Login}/>\n            <Route exact path=\"/instructions\" component={Instruction} />\n            <Route exact path=\"/calibration\" component={Calibration} />\n            <Route exact path=\"/test\" component={Test} />\n          </Switch>\n        </Router> */}\n      </div>\n    );\n  } \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\n\n// optional configuration\nconst options = {\n  position: positions.TOP_CENTER,\n  timeout: 5000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}